
Partial Class Public_ImportExcel
    Inherits System.Web.UI.Page
    Dim Base As New Base
    Public Shared ExcelConn As Data.OleDb.OleDbConnection

    Public MKMC As String
    Dim XMMC As String
    Dim LCDM As Integer
    Dim Login_User As String
    Dim UserID As Integer
    Public downURL As String


    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Login_User = Base.GetWebUserName
        UserID = Base.GetUserID(Login_User)

        Try
            LCDM = Request("LCDM")
        Catch ex As Exception
            LCDM = 0
        End Try

        If LCDM = 0 Then
            Response.Write("非法访问")
            Response.End()
        End If

        '判断是否存在此流程，并得到项目名称
        Dim dt As New Data.DataTable
        dt = Base.DB.Table("SELECT LCMC FROM GY_LCDM where LCDM = " & LCDM, "GY_LCDM")
        If dt.Rows.Count = 0 Then
            Base.Js.showalert(Me, "非法访问!")
            Exit Sub
        End If

        dt = Base.DB.Table("SELECT MKDM,xdlj,XsnDir,MKMC FROM GY_MKXX where NoLcDM =" & LCDM, "GY_MKXX")
        MKMC = dt.Rows(0).Item("mkmc")
        If Not IsPostBack Then
            Button2.Enabled = False
        End If


        If Login_User = "admin" Then
            FileUpload2.Visible = True
            Button3.Visible = True
        Else
            FileUpload2.Visible = False
            Button3.Visible = False
        End If


        
    End Sub

    '上传excel，并初始化连接
    Protected Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click
        Dim filename As String
        Dim a() As String
        Dim sjstr As String
        sjstr = System.DateTime.Now.ToString
        sjstr = sjstr.Replace(".", "")
        filename = FileUpload1.FileName
        a = filename.Split(".")
        filename = a(a.Length - 1).ToLower
        'Response.Write(a(a.Length - 1))
        If filename <> "xls" Then
            Base.Js.showalert(Me, "上传文件格式不正确!")
            Exit Sub
        End If


        If FileUpload1.FileName.Replace("." & filename, "") <> MKMC Then
            Base.Js.showalert(Me, "上传文件名称必须与模块名称一致!")
            Exit Sub
        End If

        If FileUpload1.PostedFile.ContentLength = 0 Then
            Base.Js.showalert(Me, "请选择要上传的文件!")
            Exit Sub
        Else
            Try
                FileUpload1.SaveAs(Server.MapPath("../Submit_Temp/" & Base.GetWebUserName & "/" & FileUpload1.FileName & ""))
                'ExcelConn = New Data.OleDb.OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + Server.MapPath("../Submit_Temp/" & Base.GetWebUserName & "/" & sjstr & "." & filename & "") + ";Extended Properties=""Excel 8.0;""")
                Button2.Enabled = True
            Catch ex As Exception
                'If ExcelConn.State = Data.ConnectionState.Open Then ExcelConn.Close()
                Base.Js.showalert(Me, "上传文件失败，可能另一个用户正在导入！请稍候再试")
                Exit Sub
            End Try
        End If

        Base.Js.showalert(Me, "上传成功")
    End Sub


    Protected Sub Button2_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button2.Click
        Dim dt As New DataTable
        Dim i, j As Integer
        Dim fidClass As New SunFun.Xmlclass
        Dim fidPath As String
        Dim formFolderPath As String
        Dim fid As String
        Dim row As DataRow

        '获取列名
        Dim columnNames() As String
        columnNames = getColumnName()


        Dim xmlclass As SunFun.Xmlclass = getTemplateXML()
        Dim activeColumnNames(0) As String
        Dim num As Integer = 0
        For j = 0 To columnNames.Length - 1
            Try

                If Not xmlclass.FindNode("//my:" & columnNames(j)) Is Nothing Then
                    ReDim Preserve activeColumnNames(num)
                    activeColumnNames(num) = columnNames(j)
                    num = num + 1
                End If
            Catch ex As Exception
                Response.Write("分析数据结构失败")
                Response.End()
            End Try
        Next

        If activeColumnNames.Length = 0 Then
            Base.Js.showalert(Me, "EXCEL中没有符合表单内容的数据！")
            Exit Sub
        End If

        '组合需要筛选的列名
        Dim sqlstr As String = ""
        For i = 0 To activeColumnNames.Length - 1
            If i = activeColumnNames.Length - 1 Then
                sqlstr = sqlstr & columnNames(i)
            Else
                sqlstr = sqlstr & columnNames(i) & ","
            End If

        Next

        '获取需要导入的有效数据
        dt = getDate(sqlstr)
        Dim OpDir As String = Server.MapPath("./") & "FormFolder/"
        For i = 0 To dt.Rows.Count - 1
            Dim hasInsert As Boolean = False '记录是否有数据插入
            Dim xmlNode As System.Xml.XmlNode
            row = dt.Rows(i)
            fidPath = Base.AutoAddProject_HasNoLC(LCDM, Base.GetWebUserName, "../")
            fidClass.xmlDoc.Load(fidPath)
            For j = 0 To activeColumnNames.Length - 1
                Try
                    xmlNode = fidClass.FindNode("//my:" & activeColumnNames(j))
                    If Not xmlNode Is Nothing Then
                        fidClass.FindNode("//my:" & activeColumnNames(j)).InnerText = dt.Rows(i).Item(j).ToString()
                        hasInsert = True
                    End If
                Catch ex As Exception

                End Try
            Next
            fidClass.xmlDoc.Save(fidPath)

            If hasInsert = True Then
                fid = fidPath.Split("\")(fidPath.Split("\").Length - 1).Replace(".xml", "")
                formFolderPath = fidPath.Replace("Submit_Temp\CreateTemp", "FormFolder\" & XMMC)
                Try
                    System.IO.File.Copy(fidPath, formFolderPath)

                    Dim dttemp As New DataTable
                    Dim xmdm As String
                    dttemp = Base.DB.Table("select * from xx_xmjc where fid=" & fid, "dd")
                    If dttemp.Rows.Count > 0 Then
                        xmdm = dttemp.Rows(0).Item("XMDM")
                    Else
                        Base.Js.showalert(Me, "获取XMDM失败！")
                        Exit Sub
                    End If

                    If Base.pub.GetWebConfig("SunfunSoft.Xman.FormLibrary.SQLMapping").ToLower <> "true" And Base.pub.GetWebConfig("SunfunSoft.Xman.FormLibrary.Synchronization").ToLower <> "true" Then
                        Base.XmlDataToDB(fid, OpDir)      '数据入库,进行查询之用
                    End If
                    Try
                        '改变表单状态，用以显示
                        Base.DB.Query("update gy_xmxx set xmjd = '已完成' where xmdm = " & xmdm)
                        Base.DB.Query("update xx_xmjc set state = '0' where xmdm = " & xmdm)
                    Catch ex As Exception

                    End Try
                    FormInfo.SubmitForm(fid)
                    'Base.SynSubmit(fid, "提交")
                Catch ex As Exception
                    Base.SaveErrLog(1, "导入EXCEL文件失败（拷贝生成文件时出错）" + ex.ToString())
                End Try
            End If
        Next
        Base.Js.showalert(Me, "导入成功")
    End Sub


    Protected Sub Button3_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button3.Click
        Dim filename As String
        Dim a() As String
        Dim sjstr As String
        sjstr = System.DateTime.Now.ToString
        sjstr = sjstr.Replace(".", "")
        filename = FileUpload2.FileName
        a = filename.Split(".")
        filename = a(a.Length - 1).ToLower

        Dim uploadPath As String
        'Response.Write(a(a.Length - 1))
        If filename <> "xls" Then
            Base.Js.showalert(Me, "上传文件格式不正确!")
            Exit Sub
        End If

        If FileUpload2.PostedFile.ContentLength = 0 Then
            Base.Js.showalert(Me, "请选择要上传的文件!")
            Exit Sub
        Else
            Try
                uploadPath = Server.MapPath("../FormFolder/" & MKMC & "/demo.xls")
                FileUpload2.SaveAs(uploadPath)
            Catch ex As Exception
                'If ExcelConn.State = Data.ConnectionState.Open Then ExcelConn.Close()
                Base.Js.showalert(Me, "上传文件失败，可能另一个用户正在导入！请稍候再试")
                Exit Sub
            End Try
        End If
        If System.IO.File.Exists(uploadPath) = True Then
            Base.Js.showalert(Me, "模板上传成功")
        End If
    End Sub

    ''' <summary>
    ''' 获取模板XML
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function getTemplateXML() As SunFun.Xmlclass
        Dim templateXML As New SunFun.Xmlclass
        Dim dt As New DataTable
        Dim xsndir As String
        dt = Base.DB.Table("SELECT MKDM,xdlj,XsnDir,MKMC FROM GY_MKXX where NoLcDM =" & LCDM, "GY_MKXX")
        xsndir = dt.Rows(0).Item("XsnDir").ToString.Trim

        Dim MKDM As Integer = dt.Rows(0).Item("MKDM")
        XMMC = dt.Rows(0).Item("MKMC")         '因为是无流程,流程名称与项目名称一样
        Dim XmlFileName As String = Server.MapPath("../") & "\TemplateLibrary\" & xsndir & "\template.xml"

        templateXML.xmlDoc.Load(XmlFileName)

        Return templateXML
    End Function

    ''' <summary>
    ''' 获取excel中所有列名
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function getColumnName() As String()
        Dim dt As New DataTable
        Dim i As Integer

        Dim conn As New Data.OleDb.OleDbConnection
        conn = getconn()
        '获取第一行数据
        Dim sql As String = "select top 1 * from [sheet1$]"
        dt = table(conn, sql)

        Dim columnNames(dt.Columns.Count - 1) As String
        For i = 0 To dt.Columns.Count - 1
            columnNames(i) = dt.Columns(i).ColumnName
        Next

        Return columnNames
    End Function

    ''' <summary>
    ''' 获取excel中指定的数据
    ''' </summary>
    ''' <param name="sqlstr"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function getDate(ByVal sqlstr As String) As DataTable
        Dim dt As New DataTable
        Dim conn As New Data.OleDb.OleDbConnection
        conn = getconn()
        
        Dim sql As String = "select " & sqlstr & " from [sheet1$]"
        dt = table(conn, sql)
        Return dt
    End Function

    ''' <summary>
    ''' 获取excel数据连接
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function getconn() As Data.OleDb.OleDbConnection
        Dim conn As New Data.OleDb.OleDbConnection
        Try
            conn = New Data.OleDb.OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" & Server.MapPath("../Submit_Temp/" & Base.GetWebUserName & "/" & MKMC & ".xls") & ";Extended Properties='Excel 8.0;HDR=Yes;IMEX=1';")
        Catch ex As Exception
            conn = Nothing
        End Try
        Return conn
    End Function

    ''' <summary>
    ''' excel获取数据并填入到table中
    ''' </summary>
    ''' <param name="conn">数据连接</param>
    ''' <param name="sql">查询字段</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function table(ByVal conn As Data.OleDb.OleDbConnection, ByVal sql As String) As DataTable
        Dim cmd As New Data.OleDb.OleDbCommand()
        If conn.State = ConnectionState.Closed Then
            conn.Open()
        End If
        Dim da As New OleDb.OleDbDataAdapter
        Dim ds As New DataSet
        cmd.Connection = conn
        cmd.CommandText = sql
        Try
            da.SelectCommand = cmd
            da.Fill(ds)
        Catch ex As Exception
            Response.Write(ex.ToString)
            Return Nothing
        End Try

        Return ds.Tables(0)
    End Function

    ''' <summary>
    ''' excel中增加，删除，更新操作所使用的类
    ''' </summary>
    ''' <param name="conn">数据连接</param>
    ''' <param name="sql">查询字段</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function query(ByVal conn As Data.OleDb.OleDbConnection, ByVal sql As String) As Boolean
        '进行一次查询，验证是否所有字段都存在
        Dim Cmd As New Data.OleDb.OleDbCommand()
        If conn.State = ConnectionState.Closed Then
            conn.Open()
        End If

        Cmd.Connection = conn
        Cmd.CommandText = sql
        Try
            Cmd.ExecuteNonQuery()
        Catch ex As Exception
            Response.Write(ex.ToString)
            Return False
            Exit Function
        End Try
        conn.Close()
        Return True
        'Base.Js.showalert(Me, "验证成功！")
    End Function

   
    Protected Sub LinkButton1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles LinkButton1.Click

        Dim FileName As String = Server.MapPath("../FormFolder/") & MKMC & "\demo.xls"
        If System.IO.File.Exists(FileName) = False Then
            Base.Js.showalert(Me, MKMC + "模板不存在，请联系管理员进行添加")
            Exit Sub
        End If

        Dim fileStream As New IO.FileStream(FileName, IO.FileMode.Open)
        Dim fileSize As Long = fileStream.Length
        Dim inta As Integer = CInt(fileSize)
        '客户端下载时显示的文件名
        Dim OutPutFileName As String = MKMC & "导入模板.xls"

        Context.Response.ContentType = "application/octet-stream"
        '注意后面必须后System.Text.Encoding.UTF8进行编码
        Context.Response.AddHeader("Content-Disposition", "attachment; filename=" & HttpUtility.UrlEncode(OutPutFileName, System.Text.Encoding.UTF8))
        Context.Response.AddHeader("Content-Length", fileSize.ToString())
        Dim fileBuffer(inta) As Byte
        fileStream.Read(fileBuffer, 0, inta)
        fileStream.Close()
        Context.Response.BinaryWrite(fileBuffer)
        Context.Response.End()
    End Sub
End Class
