Imports Microsoft.VisualBasic
Imports System.Data.SqlClient
Imports System.Collections.Generic
Imports System.Xml

''' <summary>
''' 造价处外网注册模块
''' </summary>
''' <remarks></remarks>
Public Class RegisterCompanyUser


    ''' <summary>
    ''' 检测用户名是否已有人申请
    ''' </summary>
    ''' <param name="userName"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function CheckCompanyUserNameExist(ByVal userName As String) As Boolean
        Dim sqlstr As String
        sqlstr = "select top 1 * from RegisterUserInfo where userName = '" & userName & "'"

        Dim dt As New DataTable
        dt = SqlHelper.ExecuteDataSet(SqlHelper.ConnectionString, CommandType.Text, sqlstr, Nothing).Tables(0)
        If dt.Rows.Count > 0 Then
            Return True
        End If

        sqlstr = "select top 1 * from gy_ygdm where DLMC = '" & userName & "'"
        Try
            dt = SqlHelper.ExecuteDataSet(SqlHelper.ConnectionString, CommandType.Text, sqlstr, Nothing).Tables(0)
        Catch ex As Exception
            DoLog.LogErrorToFile("RegisterCompanyUser---CheckCompanyUserNameExist 失败", ex.ToString())

        End Try


        If dt.Rows.Count > 0 Then
            Return True
        End If

        Return False
    End Function

    ''' <summary>
    ''' 通过公司注册号获取公司名称
    ''' </summary>
    ''' <param name="companyNO"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function GetCompanyNameByCompanyNo(ByVal companyNO As String) As String
        Dim sqlstr As String
        sqlstr = "select companyName from RegisterUserInfo where companyNO = '" & companyNO & "' and isDel='false'"

        Dim dt As New DataTable
        Try
            dt = SqlHelper.ExecuteDataSet(SqlHelper.ConnectionString, CommandType.Text, sqlstr, Nothing).Tables(0)
        Catch ex As Exception
            DoLog.LogErrorToFile("RegisterCompanyUser---GetCompanyNameByCompanyNo 失败", ex.ToString())
        End Try


        If dt.Rows.Count > 0 Then
            Return dt.Rows(0).Item(0).ToString()
        Else
            Return String.Empty
        End If
    End Function

    ''' <summary>
    ''' 添加申请信息
    ''' </summary>
    ''' <param name="companyInfo"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function AddCompanyInfo(ByVal companyInfo As MRegisterUser) As Boolean

        Dim sqlstr As String
        sqlstr = ""

        sqlstr = sqlstr & "INSERT INTO RegisterUserInfo"
        sqlstr = sqlstr & "   (UserName"
        sqlstr = sqlstr & "   ,Password"
        sqlstr = sqlstr & "   ,CompanyName"
        sqlstr = sqlstr & "   ,CompanyNo"
        sqlstr = sqlstr & "   ,CompanyCreateTime"
        sqlstr = sqlstr & "   ,CompanyOwner"
        sqlstr = sqlstr & "   ,CompanyOwnerTel"
        sqlstr = sqlstr & "   ,CompanyContacts"
        sqlstr = sqlstr & "   ,CompanyContactsTel"
        sqlstr = sqlstr & "   ,CompanyAddress"
        sqlstr = sqlstr & "   ,CompanyType"
        sqlstr = sqlstr & "   ,CompanyMoney"
        sqlstr = sqlstr & "   ,PeopleNum"
        sqlstr = sqlstr & "   ,PeopleNum1"
        sqlstr = sqlstr & "   ,PeopleNum2"
        sqlstr = sqlstr & "   ,PeopleNum3"
        sqlstr = sqlstr & "   ,ImgUrl"
        sqlstr = sqlstr & "   ,RegisterTime"
        sqlstr = sqlstr & "   ,IsEnable)"
        sqlstr = sqlstr & "VALUES"
        sqlstr = sqlstr & "   (@UserName"
        sqlstr = sqlstr & "   ,@Password"
        sqlstr = sqlstr & "   ,@CompanyName"
        sqlstr = sqlstr & "   ,@CompanyNo"
        sqlstr = sqlstr & "   ,@CompanyCreateTime"
        sqlstr = sqlstr & "   ,@CompanyOwner"
        sqlstr = sqlstr & "   ,@CompanyOwnerTel"
        sqlstr = sqlstr & "   ,@CompanyContacts"
        sqlstr = sqlstr & "   ,@CompanyContactsTel"
        sqlstr = sqlstr & "   ,@CompanyAddress"
        sqlstr = sqlstr & "   ,@CompanyType"
        sqlstr = sqlstr & "   ,@CompanyMoney"
        sqlstr = sqlstr & "   ,@PeopleNum"
        sqlstr = sqlstr & "   ,@PeopleNum1"
        sqlstr = sqlstr & "   ,@PeopleNum2"
        sqlstr = sqlstr & "   ,@PeopleNum3"
        sqlstr = sqlstr & "   ,@ImgUrl"
        sqlstr = sqlstr & "   ,@RegisterTime"
        sqlstr = sqlstr & "   ,@IsEnable)"

        Dim params() As SqlParameter = New SqlParameter() { _
            New SqlParameter("@UserName", companyInfo.UserName), _
            New SqlParameter("@Password", DoEncrypt.GetMD5(companyInfo.Password)), _
            New SqlParameter("@CompanyName", companyInfo.CompanyName), _
            New SqlParameter("@CompanyNo", companyInfo.CompanyNo), _
            New SqlParameter("@CompanyCreateTime", companyInfo.CompanyCreateTime), _
            New SqlParameter("@CompanyOwner", companyInfo.CompanyOwner), _
            New SqlParameter("@CompanyOwnerTel", companyInfo.CompanyOwnerTel), _
            New SqlParameter("@CompanyContacts", companyInfo.CompanyContacts), _
            New SqlParameter("@CompanyContactsTel", companyInfo.CompanyContactsTel), _
            New SqlParameter("@CompanyAddress", companyInfo.CompanyAddress), _
            New SqlParameter("@CompanyType", companyInfo.CompanyType), _
            New SqlParameter("@CompanyMoney", companyInfo.CompanyMoney), _
            New SqlParameter("@PeopleNum", companyInfo.PeopleNum), _
            New SqlParameter("@PeopleNum1", companyInfo.PeopleNum1), _
            New SqlParameter("@PeopleNum2", companyInfo.PeopleNum2), _
            New SqlParameter("@PeopleNum3", companyInfo.PeopleNum3), _
            New SqlParameter("@ImgUrl", companyInfo.ImgUrl), _
            New SqlParameter("@RegisterTime", DateTime.Now), _
            New SqlParameter("@IsEnable", False)}

        Dim result As Integer

        Try
            result = SqlHelper.ExecuteNonquery(SqlHelper.ConnectionString, CommandType.Text, sqlstr, params)
        Catch ex As Exception
            DoLog.LogErrorToFile("RegisterCompanyUser---AddCompanyInfo 失败", ex.ToString())
            result = -1
        End Try

        If result > 0 Then
            Return True
        Else
            Return False
        End If



    End Function

    ''' <summary>
    ''' 获取申请信息
    ''' </summary>
    ''' <param name="companyID"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function GetCompanyInfo(ByVal companyID As Integer) As MRegisterUser

        Dim sqlstr As String
        sqlstr = "select * from RegisterUserInfo where id = " & companyID & "  and isDel='false'"


        Dim dt As New DataTable
        Try
            dt = SqlHelper.ExecuteDataSet(SqlHelper.ConnectionString, CommandType.Text, sqlstr, Nothing).Tables(0)
        Catch ex As Exception
            DoLog.LogErrorToFile("RegisterCompanyUser---GetCompanyInfo 失败", ex.ToString())
            Return Nothing
        End Try


        If dt.Rows.Count > 0 Then
            Dim companyInfo As New MRegisterUser

            companyInfo.ID = Convert.ToInt32(dt.Rows(0)("id"))
            companyInfo.UserName = dt.Rows(0)("UserName").ToString()
            companyInfo.Password = dt.Rows(0)("Password").ToString()
            companyInfo.CompanyName = dt.Rows(0)("CompanyName").ToString()
            companyInfo.CompanyNo = dt.Rows(0)("CompanyNo").ToString()
            companyInfo.CompanyCreateTime = dt.Rows(0)("CompanyCreateTime").ToString()
            companyInfo.CompanyOwner = dt.Rows(0)("CompanyOwner").ToString()
            companyInfo.CompanyOwnerTel = dt.Rows(0)("CompanyOwnerTel").ToString()
            companyInfo.CompanyContacts = dt.Rows(0)("CompanyContacts").ToString()
            companyInfo.CompanyContactsTel = dt.Rows(0)("CompanyContactsTel").ToString()
            companyInfo.CompanyAddress = dt.Rows(0)("CompanyAddress").ToString()
            companyInfo.CompanyType = dt.Rows(0)("CompanyType").ToString()
            companyInfo.CompanyMoney = dt.Rows(0)("CompanyMoney").ToString()
            If Not IsDBNull(dt.Rows(0)("PeopleNum")) Then
                companyInfo.PeopleNum = Convert.ToInt32(dt.Rows(0)("PeopleNum"))
            End If
            If Not IsDBNull(dt.Rows(0)("PeopleNum1")) Then
                companyInfo.PeopleNum1 = Convert.ToInt32(dt.Rows(0)("PeopleNum1"))
            End If
            If Not IsDBNull(dt.Rows(0)("PeopleNum2")) Then
                companyInfo.PeopleNum2 = Convert.ToInt32(dt.Rows(0)("PeopleNum2"))
            End If
            If Not IsDBNull(dt.Rows(0)("PeopleNum3")) Then
                companyInfo.PeopleNum3 = Convert.ToInt32(dt.Rows(0)("PeopleNum3"))
            End If
            companyInfo.ImgUrl = dt.Rows(0)("ImgUrl").ToString()

            If Not IsDBNull(dt.Rows(0)("RegisterTime")) Then
                companyInfo.RegisterTime = Convert.ToDateTime(dt.Rows(0)("RegisterTime"))
            End If

            If Not IsDBNull(dt.Rows(0)("IsEnable")) Then
                companyInfo.IsEnable = Convert.ToBoolean(dt.Rows(0)("IsEnable"))
            Else
                companyInfo.IsEnable = False
            End If


            Return companyInfo
        Else
            Return Nothing
        End If

    End Function

    ''' <summary>
    ''' 获取申请信息列表
    ''' </summary>
    ''' <param name="searchText"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function GetCompanyInfos(ByVal searchText As String) As List(Of MRegisterUser)


        Dim sqlstr As String
        If searchText = "" Then
            sqlstr = "select * from RegisterUserInfo where  isDel='false' order by registerTime desc "
        Else
            sqlstr = "select * from RegisterUserInfo  where (CompanyName like '%" & searchText & "%' or  CompanyNo like '%" & searchText & "%' or CompanyContacts like '%" & searchText & "%' or CompanyOwner like '%" & searchText & "%')  and isDel='false' order by registerTime desc"
        End If

        Dim dt As New DataTable
        Try
            dt = SqlHelper.ExecuteDataSet(SqlHelper.ConnectionString, CommandType.Text, sqlstr, Nothing).Tables(0)
        Catch ex As Exception
            DoLog.LogErrorToFile("RegisterCompanyUser---GetCompanyInfos 失败", ex.ToString())
            Return Nothing
        End Try


        If dt.Rows.Count > 0 Then

            Dim companyInfos As New List(Of MRegisterUser)

            Dim i As Integer = 0
            For i = 0 To dt.Rows.Count - 1
                Dim temp As New MRegisterUser

                temp.ID = Convert.ToInt32(dt.Rows(i)("id"))
                temp.UserName = dt.Rows(i)("UserName").ToString()
                temp.Password = dt.Rows(i)("Password").ToString()
                temp.CompanyName = dt.Rows(i)("CompanyName").ToString()
                temp.CompanyNo = dt.Rows(i)("CompanyNo").ToString()
                temp.CompanyCreateTime = dt.Rows(i)("CompanyCreateTime").ToString()
                temp.CompanyOwner = dt.Rows(i)("CompanyOwner").ToString()
                temp.CompanyOwnerTel = dt.Rows(i)("CompanyOwnerTel").ToString()
                temp.CompanyContacts = dt.Rows(i)("CompanyContacts").ToString()
                temp.CompanyContactsTel = dt.Rows(i)("CompanyContactsTel").ToString()
                temp.CompanyAddress = dt.Rows(i)("CompanyAddress").ToString()
                temp.CompanyType = dt.Rows(i)("CompanyType").ToString()
                temp.CompanyMoney = dt.Rows(i)("CompanyMoney").ToString()
                If Not IsDBNull(dt.Rows(i)("PeopleNum")) Then
                    temp.PeopleNum = Convert.ToInt32(dt.Rows(i)("PeopleNum"))
                End If
                If Not IsDBNull(dt.Rows(i)("PeopleNum1")) Then
                    temp.PeopleNum1 = Convert.ToInt32(dt.Rows(i)("PeopleNum1"))
                End If
                If Not IsDBNull(dt.Rows(i)("PeopleNum2")) Then
                    temp.PeopleNum2 = Convert.ToInt32(dt.Rows(i)("PeopleNum2"))
                End If
                If Not IsDBNull(dt.Rows(i)("PeopleNum3")) Then
                    temp.PeopleNum3 = Convert.ToInt32(dt.Rows(i)("PeopleNum3"))
                End If
                temp.ImgUrl = dt.Rows(i)("ImgUrl").ToString()
                If Not IsDBNull(dt.Rows(i)("RegisterTime")) Then
                    temp.RegisterTime = Convert.ToDateTime(dt.Rows(0)("RegisterTime"))
                End If
                If Not IsDBNull(dt.Rows(i)("IsEnable")) Then
                    temp.IsEnable = Convert.ToBoolean(dt.Rows(i)("IsEnable"))
                Else
                    temp.IsEnable = False
                End If
                companyInfos.Add(temp)
            Next

            Return companyInfos
        Else
            Return Nothing
        End If
    End Function

    ''' <summary>
    ''' 删除申请信息
    ''' </summary>
    ''' <param name="id"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function DelCompanyInfo(ByVal id As Integer) As Boolean
        Dim sqlstr As String
        sqlstr = "update RegisterUserInfo set isDel = 'true' where id = " & id.ToString()

        Dim result As Integer
        Try
            result = SqlHelper.ExecuteNonquery(SqlHelper.ConnectionString, CommandType.Text, sqlstr, Nothing)
        Catch ex As Exception
            DoLog.LogErrorToFile("RegisterCompanyUser---DelCompanyInfo 失败", ex.ToString())
            Return False
        End Try


        If result > 0 Then
            Return True
        Else
            Return False
        End If

    End Function

    ''' <summary>
    ''' 改变申请信息状态
    ''' </summary>
    ''' <param name="id"></param>
    ''' <param name="isEnable"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function UpdateCompanyEnable(ByVal id As Integer, ByVal isEnable As Boolean) As Boolean
        Dim sqlstr As String
        sqlstr = "update RegisterUserInfo set isEnable = '" & isEnable.ToString() & "' where id = " & id.ToString()

        Dim result As Integer
        Try
            result = SqlHelper.ExecuteNonquery(SqlHelper.ConnectionString, CommandType.Text, sqlstr, Nothing)
        Catch ex As Exception
            DoLog.LogErrorToFile("RegisterCompanyUser---UpdateCompanyEnable 失败", ex.ToString())
            Return False
        End Try

        If result > 0 Then
            Return True
        Else
            Return False
        End If
    End Function

    ''' <summary>
    ''' 将用户信息插入权限组
    ''' </summary>
    ''' <param name="userID"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function InsertPowerGroup(ByVal userID As Integer) As Integer
        Dim sqlstr As String
        sqlstr = "select group_id from GY_GROUP where Group_Name='承包商'"

        Dim groupID As Integer
        Try
            groupID = SqlHelper.ExecuteScalar(SqlHelper.ConnectionString, CommandType.Text, sqlstr, Nothing)
        Catch ex As Exception
            DoLog.LogErrorToFile("RegisterCompanyUser---InsertPowerGroup 失败", ex.ToString())
            Return False
        End Try


        Dim result As Integer
        sqlstr = "insert into gy_ygqx (GROUP_ID,ygdm) values ('" & groupID & "','" & userID & "')"
        Try
            result = SqlHelper.ExecuteNonquery(SqlHelper.ConnectionString, CommandType.Text, sqlstr, Nothing)
        Catch ex As Exception
            DoLog.LogErrorToFile("RegisterCompanyUser---InsertPowerGroup 失败", ex.ToString())
            Return False
        End Try

        If result > 0 Then
            Return True
        Else
            Return False
        End If

    End Function

    ''' <summary>
    ''' 自动创建系统账号
    ''' </summary>
    ''' <param name="companyInfo"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function CreateSystemAccount(ByVal companyInfo As MRegisterUser) As Boolean
        Dim sql As String
        sql = "insert into GY_YGDM(ygxm,dlmc,QYBZ,DLPWD) values(@ygxm,@dlmc,@qybz,@dlwpd);Select YGDM from GY_YGDM where YGDM = @@IDENTITY"

        Dim params() As SqlParameter = New SqlParameter() { _
            New SqlParameter("@ygxm", companyInfo.CompanyName), _
            New SqlParameter("@dlmc", companyInfo.UserName), _
            New SqlParameter("@qybz", True), _
            New SqlParameter("@dlwpd", companyInfo.Password)}

        'sql = "insert into GY_YGDM(ygxm,dlmc,QYBZ,DLPWD) values('" & companyInfo.CompanyName & "','" & companyInfo.UserName & "','True','" & companyInfo.Password & "');Select YGDM from GY_YGDM where YGDM = @@IDENTITY"

        Dim userID As Integer
        Try
            userID = SqlHelper.ExecuteScalar(SqlHelper.ConnectionString, CommandType.Text, sql, params)
        Catch ex As Exception
            DoLog.LogErrorToFile("RegisterCompanyUser---CreateSystemAccount 失败", ex.ToString())
            Return False
        End Try


        If userID <= 0 Then
            Return False
        End If


        Dim Base As New Base
        Dim result As String = String.Empty

        UpdateUserContent(userID, companyInfo, result)

        If result = "" Then
            CreateCompanyDetailInfo(companyInfo, result)
        End If

        If result = "" Then

            If UpdateCompanyEnable(companyInfo.ID, True) Then
                If InsertPowerGroup(userID) Then
                    Return True
                Else
                    Return False
                End If
            Else
                Return False
            End If


        Else
            Return False
        End If
    End Function


    ''' <summary>
    ''' 为用户创建账号，并写入详情
    ''' </summary>
    ''' <param name="userID"></param>
    ''' <param name="outStr"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function UpdateUserContent(ByVal userID As Integer, ByVal companyInfo As MRegisterUser, ByRef outStr As String) As Boolean
        Dim TmpYGDM As Integer = userID

        Dim XsnDir As String = "XMAN-YGDM"          '设置模板名称 
        Dim BaseTop As String = System.AppDomain.CurrentDomain.BaseDirectory
        Dim BaseDir As String = BaseTop & "FormFolder\XMAN-YGDM"                   '设置基础路径

        Dim sqlstr As String

        '判断用户ID是否有效
        Dim dt As New DataTable
        sqlstr = "SELECT YGDM,YGXM,DLMC,Mobile,SSKS,QYBZ,EMAIL from GY_YGDM where YGDM = " & TmpYGDM
        dt = SqlHelper.ExecuteDataSet(SqlHelper.ConnectionString, CommandType.Text, sqlstr, Nothing).Tables(0)
        If dt.Rows.Count = 0 Then
            outStr = "非法调用"
            Return False
        End If

        '建立用户档案目录
        If Not System.IO.Directory.Exists(BaseDir) Then
            System.IO.Directory.CreateDirectory(BaseDir)
        End If

        Dim uri As String = BaseTop & "TemplateLibrary\" & XsnDir & ".xsn"
        If System.IO.File.Exists(uri) = False Then
            outStr = "用户无详细信息"
            Return False
        End If

        Dim DfileName As String = BaseDir & "\" & TmpYGDM & ".xml"
        Dim templatefile As String = BaseTop & "TemplateLibrary\" & XsnDir & "\template.xml"

        If System.IO.File.Exists(DfileName) = False Then
            If System.IO.File.Exists(templatefile) = False Then
                outStr = "详细信息未设置"
                Return False
            Else
                Try
                    System.IO.File.Copy(templatefile, DfileName, True)
                Catch ex As Exception
                    DoLog.LogErrorToFile("RegisterCompanyUser---UpdateUserContent 读取失败", ex.ToString())
                    outStr = "读取失败"
                    Return False
                End Try
            End If
        End If

        Dim XmlClass As New XmlClass

        Dim RootNode As System.Xml.XmlNode
        RootNode = XmlClass.GetXmlFile(DfileName)
        Dim RootNodeName As String = XmlClass.GetRootNodeName
        Dim Search_Fid As String = XmlClass.GetFormID
        '更新员工代码
        Dim Xpath As String = "//" & RootNodeName & "/" & Search_Fid.Replace("表单号", "标题") & "/" & Search_Fid
        Dim TitleNode As System.Xml.XmlNode = XmlClass.FindNode(Xpath)
        TitleNode.InnerText = TmpYGDM
        TitleNode = XmlClass.FindNode("//my:姓名")
        If Not TitleNode Is Nothing Then TitleNode.InnerText = dt.Rows(0)(1).ToString
        TitleNode = XmlClass.FindNode("//my:用户名")
        If Not TitleNode Is Nothing Then TitleNode.InnerText = dt.Rows(0)(2).ToString
        TitleNode = XmlClass.FindNode("//my:移动电话")
        If Not TitleNode Is Nothing Then TitleNode.InnerText = companyInfo.CompanyContactsTel
        TitleNode = XmlClass.FindNode("//my:EMAIL")
        If Not TitleNode Is Nothing Then TitleNode.InnerText = dt.Rows(0)("EMAIL").ToString
        '---说明
        TitleNode = XmlClass.FindNode("//my:验证码")
        If Not TitleNode Is Nothing Then TitleNode.InnerText = "111"

        TitleNode = XmlClass.FindNode("//my:注册号")
        If Not TitleNode Is Nothing Then TitleNode.InnerText = companyInfo.CompanyNo

        TitleNode = XmlClass.FindNode("//my:类型")
        If Not TitleNode Is Nothing Then TitleNode.InnerText = "承包商"

        Dim KSDM As Integer
        Try
            KSDM = dt.Rows(0)("SSKS").ToString
        Catch ex As Exception
            KSDM = 0
        End Try


        sqlstr = "select KSMC from GY_KSDM where KSDM=" & KSDM
        Dim KSMC As String = SqlHelper.ExecuteScalar(SqlHelper.ConnectionString, CommandType.Text, sqlstr, Nothing)
        TitleNode = XmlClass.FindNode("//my:部门")
        If Not KSMC Is Nothing Then
            If Not TitleNode Is Nothing Then TitleNode.InnerText = KSMC.Trim
        Else
            If Not TitleNode Is Nothing Then TitleNode.InnerText = ""
        End If

        TitleNode = XmlClass.FindNode("//my:是否在岗")
        If dt.Rows(0)("QYBZ").ToString() = "1" Then
            If Not TitleNode Is Nothing Then TitleNode.InnerText = "true"
        Else
            If Not TitleNode Is Nothing Then TitleNode.InnerText = "false"
        End If
        XmlClass.Save()


        '检测库是否存在
        Dim KuFile As String = BaseDir & ".库.xml"
        If System.IO.File.Exists(KuFile) = False Then
            If System.IO.File.Exists(templatefile) = False Then
                outStr = "详细信息未设置"
            Else
                Try
                    System.IO.File.Copy(templatefile, KuFile, True)
                Catch ex As Exception
                    DoLog.LogErrorToFile("RegisterCompanyUser---UpdateUserContent 读取库失败", ex.ToString())
                    outStr = "读取失败,请与管理员联系"
                End Try
            End If
        End If

        '入库操作,XML入库
        Dim TempNode As System.Xml.XmlNode
        XmlClass.GetXmlFile(DfileName)
        RootNodeName = XmlClass.GetRootNodeName
        TempNode = XmlClass.GetRootNode.Item(0)

        XmlClass.GetXmlFile(KuFile)
        Dim Node2 As XmlNode = XmlClass.FindNode("//" & RootNodeName & "/" & Search_Fid.Replace("表单号", "标题") & "[" & Search_Fid & "='" & TmpYGDM & "']")
        If Node2 Is Nothing Then
            '6.添加用户操作记录,添加新表单
            '这里对模板库中的空记录进行处理。防止在引用库时，出现空记录导致SUM不能用。
            Dim NodeNull As XmlNode = XmlClass.FindNode("//" & RootNodeName & "/" & Search_Fid.Replace("表单号", "标题") & "[" & Search_Fid & "='']")
            If NodeNull Is Nothing Then
                Try
                    XmlClass.AddNode(TempNode)
                Catch ex As Exception
                    DoLog.LogErrorToFile("RegisterCompanyUser---UpdateUserContent 入库失败1", ex.ToString())
                    outStr = "系统错误：入库失败！"
                End Try
            Else
                Try
                    XmlClass.UpdateNode("//" & RootNodeName & "/" & Search_Fid.Replace("表单号", "标题") & "[" & Search_Fid & "='']", TempNode)
                Catch ex As Exception
                    DoLog.LogErrorToFile("RegisterCompanyUser---UpdateUserContent 入库失败2", ex.ToString())
                    outStr = "系统错误：入库失败！"
                End Try
            End If
        Else
            '6.添加用户操作记录,修改表单
            Try
                XmlClass.UpdateNode("//" & RootNodeName & "/" & Search_Fid.Replace("表单号", "标题") & "[" & Search_Fid & "='" & TmpYGDM & "']", TempNode)
            Catch ex As Exception
                DoLog.LogErrorToFile("RegisterCompanyUser---UpdateUserContent 入库失败3", ex.ToString())
                outStr = "系统错误：入库失败！"
            End Try
        End If

        Return True
    End Function

    ''' <summary>
    ''' 填写承包人信息
    ''' </summary>
    ''' <param name="companyInfo"></param>
    ''' <param name="outStr"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function CreateCompanyDetailInfo(ByVal companyInfo As MRegisterUser, ByRef outStr As String) As Boolean

        Dim Base As New Base
        Dim formName As String = "ht_承包人信息"

        Dim lcdm As Integer
        lcdm = Base.GetLCDMByMKDM(Base.GetMKDM(formName))

        Dim i As Integer
        Dim contentxml As New XmlClass
        Dim formxml As New XmlClass


        '判断是否存在此流程，并得到项目名称
        Dim tb As New Data.DataTable
        tb = Base.DB.Table("SELECT LCMC FROM GY_LCDM where LCDM = " & lcdm, "GY_LCDM")
        If tb.Rows.Count = 0 Then

        End If
        Dim XMMC As String = tb.Rows(0).Item(0)         '因为是无流程,流程名称与项目名称一样
        Dim DfileName As String = Base.AutoAddProject_HasNoLC(lcdm, Base.GetWebUserName(), "~")
        If DfileName = Nothing Then
            outStr = "新建表单出错"
            Return False
        End If

        Dim fid As String
        Dim fidPath As String
        Dim formFolderPath As String
        Dim OpDir As String = AppDomain.CurrentDomain.BaseDirectory & "FormFolder/"
        Dim xmdm As String

        fidPath = DfileName
        fid = fidPath.Split("\")(fidPath.Split("\").Length - 1).Replace(".xml", "")
        formxml.xmlDoc.Load(DfileName)


        Dim dic As New Dictionary(Of String, String)
        dic = Relations(companyInfo)

        For Each Pair As KeyValuePair(Of String, String) In dic
            Dim nodeName As String = "my:" & Pair.Key
            Dim nodeValue As String = Pair.Value

            Try
                If formxml.xmlDoc.GetElementsByTagName(nodeName).Count = 1 Then
                    formxml.xmlDoc.GetElementsByTagName(nodeName).Item(0).InnerXml = nodeValue
                End If
            Catch ex As Exception

            End Try
        Next

        If companyInfo.ImgUrl <> "" Then
            Dim path As String = AppDomain.CurrentDomain.BaseDirectory & companyInfo.ImgUrl.Replace("../../", "")
            Dim base64str As String = DoEncrypt.FileToBase64(path)

            Dim txtFileName As String = fid & "_0_0.txt"
            Dim annexPath As String = OpDir + formName + "/Annex/"

            Try
                If Not IO.File.Exists(annexPath + txtFileName) Then
                    System.IO.File.Create(annexPath + txtFileName).Close()
                End If
                Dim sw As New System.IO.StreamWriter(annexPath + txtFileName)
                sw.Write(base64str)
                sw.Close()
            Catch ex As Exception
                DoLog.LogErrorToFile("RegisterCompanyUser---CreateCompanyDetailInfo 写文件失败", ex.ToString())
            End Try
            

            formxml.xmlDoc.GetElementsByTagName("my:营业执照").Item(0).InnerXml = txtFileName

        End If



        formxml.xmlDoc.Save(DfileName)


        '表单入库操作        
        formFolderPath = fidPath.Replace("Submit_Temp\CreateTemp", "FormFolder\" & XMMC)
        Try
            System.IO.File.Copy(fidPath, formFolderPath)


            tb = Base.DB.Table("select * from xx_xmjc where fid=" & fid, "dd")
            If tb.Rows.Count > 0 Then
                xmdm = tb.Rows(0).Item("XMDM")
            Else
                outStr = "获取XMDM失败！"
            End If

            Try
                '改变表单状态，用以显示
                Base.DB.Query("update gy_xmxx set xmjd = '已完成' where xmdm = " & xmdm)
                Base.DB.Query("update xx_xmjc set state = '0' where xmdm = " & xmdm)
            Catch ex As Exception

            End Try
            FormInfo.SubmitForm(fid)
            'Base.SynSubmit(fid, "提交")
        Catch ex As Exception
            outStr = "表单同步失败！"
        End Try

        Return True
    End Function

    ''' <summary>
    ''' 表单字段键值对
    ''' </summary>
    ''' <param name="companyInfo"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Function Relations(ByVal companyInfo As MRegisterUser) As Dictionary(Of String, String)
        Dim dic As New Dictionary(Of String, String)
        dic.Add("用户名", companyInfo.UserName)
        dic.Add("单位名称", companyInfo.CompanyName)
        dic.Add("法人代表", companyInfo.CompanyOwner)
        dic.Add("法人代表联系方式", companyInfo.CompanyOwnerTel)
        dic.Add("联系人", companyInfo.CompanyContacts)
        dic.Add("联系方式", companyInfo.CompanyContactsTel)
        dic.Add("成立时间", companyInfo.CompanyCreateTime)
        dic.Add("单位地址", companyInfo.CompanyAddress)
        dic.Add("注册号", companyInfo.CompanyNo)
        dic.Add("公司类型", companyInfo.CompanyType)
        dic.Add("注册资本", companyInfo.CompanyMoney)
        dic.Add("从业人数", companyInfo.PeopleNum)
        dic.Add("一级建造师", companyInfo.PeopleNum1)
        dic.Add("二级建造师", companyInfo.PeopleNum2)
        dic.Add("技术人员人数", companyInfo.PeopleNum3)

        Return dic
    End Function

End Class
